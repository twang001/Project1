{
	"name": "DataverseCDMToSQL",
	"properties": {
		"description": "Data flow which reads CDM entity, transforms the data and move the data to destination SQL DB",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "ADLSG2_SAStest",
						"type": "LinkedServiceReference"
					},
					"name": "CDMEntity"
				},
				{
					"linkedService": {
						"referenceName": "AzureSynapseAnalytics1",
						"type": "LinkedServiceReference"
					},
					"name": "getMaxVersion"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "AzureSynapseAnalytics1",
						"type": "LinkedServiceReference"
					},
					"name": "AzureSQLDB"
				},
				{
					"linkedService": {
						"referenceName": "AzureSynapseAnalytics1",
						"type": "LinkedServiceReference"
					},
					"name": "AzureSQLDBDeleteLog"
				}
			],
			"transformations": [
				{
					"name": "IdentifyColumns"
				},
				{
					"name": "AlterRow"
				},
				{
					"name": "Rank"
				},
				{
					"name": "Dedup"
				},
				{
					"name": "FilterFolders"
				},
				{
					"name": "FilterDeletedRows"
				},
				{
					"name": "AddEntityName"
				},
				{
					"name": "SelectDeleteLogColumns"
				},
				{
					"name": "FilterMaxVersion"
				}
			],
			"scriptLines": [
				"parameters{",
				"     container as string,",
				"     folder as string,",
				"     entity as string,",
				"     dbschema as string,",
				"     prefix as string",
				"}",
				"source(useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: true,",
				"     entity: ($entity),",
				"     format: 'cdm',",
				"     manifestType: 'model',",
				"     folderPath: ($folder),",
				"     fileSystem: ($container),",
				"     dateFormats: ['MM/dd/yyyy','yyyy-MM-dd'],",
				"     timestampFormats: ['MM/dd/yyyy hh:mm:ss a','yyyy-MM-dd\\'T\\'HH:mm:ss.SSS\\'Z\\'','yyyy-MM-dd\\'T\\'HH:mm:ss\\'Z\\'','MM/dd/yyyy HH:mm:ss','yyyy-MM-dd\\'T\\'HH:mm:ss']) ~> CDMEntity",
				"source(output(",
				"          maxversion as long",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'query',",
				"     store: 'synapseanalytics',",
				"     query: (\"SELECT COALESCE(MAX(versionnumber),0) AS maxversion FROM \" + $dbschema + \".\" + $prefix + $entity ),",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     staged: true) ~> getMaxVersion",
				"CDMEntity derive(Id = toString(byName(\"Id\")),",
				"          versionnumber = toLong(byName(\"versionnumber\")),",
				"          IsDelete = toBoolean(byName(\"IsDelete\")),",
				"          SinkModifiedOn = toTimestamp(byName(\"SinkModifiedOn\"))) ~> IdentifyColumns",
				"FilterMaxVersion alterRow(deleteIf(IsDelete==true()),",
				"     upsertIf(isNull(IsDelete)||IsDelete==false())) ~> AlterRow",
				"IdentifyColumns window(over(Id),",
				"     desc(Id, false),",
				"     desc(versionnumber, false),",
				"     desc(SinkModifiedOn, false),",
				"     {_RowVersion} = denseRank()) ~> Rank",
				"Rank filter(toLong(byName(\"_RowVersion\"))==1) ~> Dedup",
				"Dedup, getMaxVersion join(versionnumber > maxversion,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'right')~> FilterFolders",
				"FilterMaxVersion filter(IsDelete==true()) ~> FilterDeletedRows",
				"FilterDeletedRows derive(EntityName = $entity) ~> AddEntityName",
				"AddEntityName select(mapColumn(",
				"          EntityName,",
				"          RecordId = Id,",
				"          SinkDeleteTime = SinkModifiedOn,",
				"          VersionNumber = versionnumber",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: true) ~> SelectDeleteLogColumns",
				"FilterFolders filter(versionnumber>toLong(maxversion)) ~> FilterMaxVersion",
				"AlterRow sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table',",
				"     store: 'synapseanalytics',",
				"     schemaName: ($dbschema),",
				"     tableName: ($prefix + $entity\r",
				"),",
				"     insertable: true,",
				"     updateable: false,",
				"     deletable: false,",
				"     upsertable: false,",
				"     allowCopyCommand: true,",
				"     staged: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> AzureSQLDB",
				"SelectDeleteLogColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table',",
				"     store: 'synapseanalytics',",
				"     schemaName: ($dbschema),",
				"     tableName: ($prefix+'DeleteLog'),",
				"     insertable: true,",
				"     updateable: false,",
				"     deletable: false,",
				"     upsertable: false,",
				"     allowCopyCommand: true,",
				"     staged: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> AzureSQLDBDeleteLog"
			]
		}
	}
}