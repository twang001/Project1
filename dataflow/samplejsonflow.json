{
	"name": "samplejsonflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "samplejson",
						"type": "DatasetReference"
					},
					"name": "samplejson"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "samplejsonoutput",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Select1"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "Select2"
				},
				{
					"name": "Flatten1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          code as boolean,",
				"          commentCount as boolean,",
				"          createdAt as string,",
				"          description as string,",
				"          feedsComment as string,",
				"          id as short,",
				"          imagePaths as string,",
				"          images as string,",
				"          isdeleted as boolean,",
				"          lat as boolean,",
				"          likeDislike as (dislikes as boolean, likes as boolean, userAction as short),",
				"          lng as boolean,",
				"          location as string,",
				"          mediatype as boolean,",
				"          msg as string,",
				"          multiMedia as (createAt as string, description as string, id as short, likeCount as boolean, mediatype as short, name as string, place as string, url as string)[],",
				"          name as string,",
				"          profilePicture as string,",
				"          title as string,",
				"          userId as short,",
				"          videoUrl as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'arrayOfDocuments') ~> samplejson",
				"samplejson select(mapColumn(",
				"          code,",
				"          commentCount,",
				"          createdAt,",
				"          description,",
				"          feedsComment,",
				"          id,",
				"          imagePaths,",
				"          images,",
				"          isdeleted,",
				"          lat,",
				"          likeDislike,",
				"          lng,",
				"          location,",
				"          mediatype,",
				"          msg,",
				"          multiMedia,",
				"          name,",
				"          profilePicture,",
				"          title,",
				"          userId,",
				"          videoUrl",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Select1",
				"Select1 derive(Feed = @(id=id,",
				"          MultipleItem=multiMedia)) ~> DerivedColumn1",
				"DerivedColumn1 select(mapColumn(",
				"          Feed",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Select2",
				"Select2 foldDown(unroll(Feed.MultipleItem),",
				"     mapColumn(",
				"          Feed = Feed.id,",
				"          MultipleItem = Feed.MultipleItem.id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> Flatten1",
				"Flatten1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}